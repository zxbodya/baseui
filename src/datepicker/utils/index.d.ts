import addDays from 'date-fns/addDays';
import addWeeks from 'date-fns/addWeeks';
import addMonths from 'date-fns/addMonths';
import addYears from 'date-fns/addYears';
import getDay from 'date-fns/getDay';
import getDate from 'date-fns/getDate';
import getMinutes from 'date-fns/getMinutes';
import getHours from 'date-fns/getHours';
import getMonth from 'date-fns/getMonth';
import getYear from 'date-fns/getYear';
import isAfter from 'date-fns/isAfter';
import isBefore from 'date-fns/isBefore';
import setSeconds from 'date-fns/setSeconds';
import setMinutes from 'date-fns/setMinutes';
import setHours from 'date-fns/setHours';
import setMonth from 'date-fns/setMonth';
import setYear from 'date-fns/setYear';
import subDays from 'date-fns/subDays';
import subMonths from 'date-fns/subMonths';
import subWeeks from 'date-fns/subWeeks';
import subYears from 'date-fns/subYears';
import type { CalendarPropsT } from '../types';
export declare function formatDate(date: Date, formatStr: string, locale?: any): any;
export { setSeconds, setMinutes, setHours, setMonth, setYear };
export { getMinutes, getHours, getMonth, getYear, getDay, getDate };
export declare function getStartOfWeek(date: Date, locale?: any): Date;
export declare function getEndOfWeek(date: Date): Date;
export declare function getStartOfMonth(date: Date): Date;
export declare function getEndOfMonth(date: Date): Date;
export { addDays, addWeeks, addMonths, addYears };
export { subDays, subWeeks, subMonths, subYears };
export { isBefore, isAfter };
export declare function isSameYear(date1?: Date | null, date2?: Date | null): boolean;
export declare function isSameMonth(date1?: Date | null, date2?: Date | null): boolean;
export declare function isSameDay(date1?: Date | null, date2?: Date | null): boolean;
export declare function isDayInRange(day: Date, startDate: Date, endDate: Date): boolean;
export declare function isStartOfMonth(date: Date): boolean;
export declare function isEndOfMonth(date: Date): boolean;
export declare function getWeekdayMinInLocale(date: Date, locale: any): any;
export declare function getWeekdayInLocale(date: Date, locale: any): any;
export declare function getMonthInLocale(month: number, locale: any): any;
export declare function isDayDisabled(day: Date, { minDate, maxDate, excludeDates, includeDates, filterDate, }?: {
    minDate?: Date;
    maxDate?: Date;
    excludeDates?: Array<Date>;
    includeDates?: Array<Date>;
    filterDate?: (day: Date) => boolean;
}): boolean;
export declare function isOutOfBounds(day: Date, { minDate, maxDate, }?: {
    minDate?: Date;
    maxDate?: Date;
}): boolean;
export declare function monthDisabledBefore(day: Date, { minDate, includeDates, }?: {
    minDate?: Date;
    includeDates?: Array<Date>;
}): boolean;
export declare function monthDisabledAfter(day: Date, { maxDate, includeDates }?: CalendarPropsT): boolean;
export declare function getEffectiveMinDate({ minDate, includeDates }: CalendarPropsT): Date;
export declare function getEffectiveMaxDate({ maxDate, includeDates }: CalendarPropsT): Date;
export declare function applyTimeToDate(date: Date | undefined | null, time: Date): Date;
export declare function applyDateToTime(time: Date | undefined | null, date: Date): Date;
